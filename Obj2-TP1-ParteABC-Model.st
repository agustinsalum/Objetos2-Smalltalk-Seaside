Object subclass: #CuOOra	instanceVariableNames: 'usuarios topicos'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-Model'!!CuOOra commentStamp: 'agustin 4/16/2020 18:20' prior: 0!"iniciar"ComponenteIndex initialize."Limpiar"CuOOra clearSoleInstance !!CuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 11:17'!buscarUsuarioConNombreUsuario: unNombreUsuarioIngresado contrasena: unaContrasenaIngresada	^ usuarios		detect: [ :unUsuarioCuOOra | 			unUsuarioCuOOra				validarNombreUsuario: unNombreUsuarioIngresado				contrasena: unaContrasenaIngresada ]		ifNone: [ ^ nil ]! !!CuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:32'!cantidadUsuarios	^ usuarios size! !!CuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:32'!cantidadTopicos	^ topicos size! !!CuOOra methodsFor: 'initialization' stamp: 'agustin 5/5/2020 18:22'!crearInstancias	|unUsuarioPedro unUsuarioDiego  unUsuarioJuan unTopicoOO1 unTopicoTestUnidad unTopicoSmalltack unaPreguntaPedro unaPreguntaDiego unaColeccionTopicos otraColeccionTopicos|		unaColeccionTopicos     := OrderedCollection new.	otraColeccionTopicos    := OrderedCollection new.		unTopicoOO1         := self crearTopicoNombre: 'OO1'       descripcion: 'Objetos 1 ' .	unTopicoTestUnidad  := self crearTopicoNombre: 'Test'      descripcion: 'Test unidad ' .	unTopicoSmalltack   := self crearTopicoNombre: 'Smalltack' descripcion: 'Lenguaje de programacion '.		unaColeccionTopicos    add: unTopicoOO1.	unaColeccionTopicos    add: unTopicoTestUnidad. 	otraColeccionTopicos   add: unTopicoOO1.	otraColeccionTopicos   add: unTopicoSmalltack.  		unUsuarioPedro  :=  self crearUsuarioConNombreUsuario: 'pedro@cuoora.com'  contrasena: 'pedro@cuoora.com'.	unUsuarioDiego  :=  self crearUsuarioConNombreUsuario: 'diego@cuoora.com'  contrasena: 'diego@cuoora.com'.	unUsuarioJuan   :=  self crearUsuarioConNombreUsuario: 'juan@cuoora.com'   contrasena: 'juan@cuoora.com'. 		unUsuarioJuan  seguirUsuario: unUsuarioDiego.	unUsuarioPedro seguirUsuario: unUsuarioJuan. 		unaPreguntaPedro  := unUsuarioPedro crearPreguntaConTitulo: 'SetUp' descripcion: 'Para que sirve el metodo setUp?' topicosRelacionados: unaColeccionTopicos.	unaPreguntaDiego :=  unUsuarioDiego crearPreguntaConTitulo: 'messageNotUnderstood' descripcion: 'Que significa #messageNotUnderstood?' topicosRelacionados: otraColeccionTopicos.   				unUsuarioDiego crearRespuestaConTextoRespuesta: 'Sirve para instanciar los objetos que son evaluados por el test en un unico metodo y que se ejecute siempre antes de cada test.' pregunta: unaPreguntaPedro.		unUsuarioPedro crearRespuestaConTextoRespuesta: 'Significa que el objeto que recibe el mensaje no encontro ningun metodo para ejecutar en respuesta.' pregunta: unaPreguntaDiego.  	   ! !!CuOOra methodsFor: 'public' stamp: 'agustin 4/2/2020 13:34'!crearUsuarioConNombreUsuario: unNombreUsuario contrasena: unaContrasena	^ usuarios		add:			(UsuarioCuOOra				nuevoConNombreUsuario: unNombreUsuario				contrasena: unaContrasena)! !!CuOOra methodsFor: 'public' stamp: 'agustin 4/14/2020 18:21'!initialize	usuarios := OrderedCollection new.	topicos := OrderedCollection new.! !!CuOOra methodsFor: 'public' stamp: 'agustin 5/1/2020 00:35'!crearTopicoNombre: unNombre descripcion: unaDescripcion	(topicos contains: [ :unTopico | unTopico tenesNombre: unNombre ])		ifTrue: [ ^ nil ]		ifFalse: [ ^ topicos				add: (Topico nuevoConNombre: unNombre descripcion: unaDescripcion) ]! !!CuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 13:41'!topicos	^ topicos! !!CuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 13:40'!usuarios	^ usuarios! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!CuOOra class	instanceVariableNames: 'soleInstance'!!CuOOra class methodsFor: 'as yet unclassified' stamp: 'agustin 4/14/2020 18:32'!carga	^ self new crearInstancias! !!CuOOra class methodsFor: 'accessing' stamp: 'agustin 4/9/2020 00:50'!clearSoleInstance	soleInstance := nil! !!CuOOra class methodsFor: 'accessing' stamp: 'agustin 4/14/2020 19:18'!soleInstance	^ soleInstance ifNil: [ soleInstance := CuOOra carga ]! !Object subclass: #Publicacion	instanceVariableNames: 'usuarioCreador fechaHoraCreacion valoraciones'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-Model'!!Publicacion commentStamp: 'agustin 4/2/2020 13:20' prior: 0!Esta clase no tiene comentarios!!Publicacion methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:32'!cantidadValoraciones	^ valoraciones size! !!Publicacion methodsFor: 'private ' stamp: 'agustin 4/4/2020 19:09'!realizaMismaValoracion: unLikeDislike usuario: unUsuario	"Verifica que la valoracion del usuario sea la misma, En este caso true. false en caso contrario."	^ (self retornarValoracionUsuario: unUsuario)		tenesValoracion: unLikeDislike! !!Publicacion methodsFor: 'private ' stamp: 'agustin 4/4/2020 01:35'!retornarValoracionUsuario: unUsuario	^ valoraciones		detect: [ :unaValoracion | unaValoracion perteneceUsuario: unUsuario ]! !!Publicacion methodsFor: 'private ' stamp: 'agustin 4/16/2020 19:54'!cantidadLikes	^ (valoraciones		select: [ :unaValoracion | unaValoracion tenesValoracion: true ])		size! !!Publicacion methodsFor: 'private ' stamp: 'agustin 4/16/2020 19:55'!cantidadDislikes	^ (valoraciones		select: [ :unaValoracion | unaValoracion tenesValoracion: false ])		size! !!Publicacion methodsFor: 'private ' stamp: 'agustin 4/4/2020 01:38'!eliminarValoracionUsuario: unUsuario	valoraciones remove: (self retornarValoracionUsuario: unUsuario)! !!Publicacion methodsFor: 'private ' stamp: 'agustin 4/4/2020 00:50'!crearValoracionConLikeDislike: unLikeDislike usuario: unUsuario	^ valoraciones		add:			(Valoracion				nuevoConLikeDisLike: unLikeDislike				usuario: unUsuario				publicacion: self)! !!Publicacion methodsFor: 'public' stamp: 'agustin 4/30/2020 19:35'!calcularPuntajeConUsuario: unUsuario	"Cada tipo de publicacion calcula los puntos de manera distinta"	self subclassResponsibility! !!Publicacion methodsFor: 'public' stamp: 'agustin 4/30/2020 20:23'!calcularPuntajeDeterminado	^ self cantidadLikes - self cantidadDislikes! !!Publicacion methodsFor: 'public' stamp: 'agu 4/19/2020 20:51'!nombreUsuarioUsuarioCreador	^ usuarioCreador retornarNombreUsuario! !!Publicacion methodsFor: 'public' stamp: 'agu 4/19/2020 18:15'!registrarValoracion: unLikeDislike usuario: unUsuario	(self teValoroUsuario: unUsuario)				ifFalse: [ ^ self crearValoracionConLikeDislike: unLikeDislike usuario: unUsuario ]		ifTrue: [ (self realizaMismaValoracion: unLikeDislike usuario: unUsuario)								ifTrue: [ ^ nil ]				ifFalse: [ self eliminarValoracionUsuario: unUsuario.							  ^ self crearValoracionConLikeDislike: unLikeDislike usuario: unUsuario  ] ]! !!Publicacion methodsFor: 'public' stamp: 'agu 4/19/2020 01:25'!initializeConUsuarioCreador: unUsuarioCreador	usuarioCreador := unUsuarioCreador.	valoraciones := OrderedCollection new.	fechaHoraCreacion := DateAndTime now.! !!Publicacion methodsFor: 'public' stamp: 'agustin 4/4/2020 00:20'!teValoroUsuario: unUsuario	valoraciones isEmpty		ifTrue: [ ^ false ]		ifFalse: [ ^ valoraciones				contains: [ :unaValoracion | unaValoracion perteneceUsuario: unUsuario ] ]! !!Publicacion methodsFor: 'accessing' stamp: 'agustin 4/2/2020 15:22'!usuarioCreador	^ usuarioCreador! !!Publicacion methodsFor: 'accessing' stamp: 'agustin 4/18/2020 18:54'!fechaHoraCreacion	^ fechaHoraCreacion! !!Publicacion methodsFor: 'accessing' stamp: 'agustin 4/4/2020 01:31'!valoraciones	^ valoraciones! !Publicacion subclass: #PublicacionPregunta	instanceVariableNames: 'titulo descripcion topicosRelacionados respuestas'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-Model'!!PublicacionPregunta commentStamp: 'agustin 4/2/2020 13:21' prior: 0!Esta clase no tiene comentarios!!PublicacionPregunta methodsFor: 'private' stamp: 'agustin 4/30/2020 20:00'!eliminarDesdeRespuestas	respuestas do: [ :unaRespuesta | unaRespuesta eliminarPregunta: self ]! !!PublicacionPregunta methodsFor: 'private' stamp: 'agustin 4/4/2020 17:01'!puntos	^ 20! !!PublicacionPregunta methodsFor: 'private' stamp: 'agustin 4/30/2020 19:59'!eliminarDesdeTopicosRelacionados	"si la pregunta tiene un topico, significa que la pregunta esta en ese topico"	topicosRelacionados do: [ :unTopicoRelacionado | unTopicoRelacionado eliminarPregunta: self ]! !!PublicacionPregunta methodsFor: 'private' stamp: 'agustin 4/30/2020 20:05'!eliminarDesdeUsuario	usuarioCreador eliminarPregunta: self! !!PublicacionPregunta methodsFor: 'private' stamp: 'agustin 4/4/2020 19:11'!eliminarRespuestas	"removeAll elimina todos los items de la coleccion"	respuestas removeAll! !!PublicacionPregunta methodsFor: 'private' stamp: 'agustin 5/1/2020 01:04'!eliminarRespuestasDesdeUsuarios	respuestas		do: [ :unaRespuesta | 			(unaRespuesta perteneceUsuario: usuarioCreador)				ifTrue: [ usuarioCreador eliminarRespuesta: unaRespuesta ] ]! !!PublicacionPregunta methodsFor: 'accessing' stamp: 'agustin 4/2/2020 16:50'!titulo	^ titulo! !!PublicacionPregunta methodsFor: 'accessing' stamp: 'agustin 4/2/2020 17:38'!topicosRelacionados	^ topicosRelacionados! !!PublicacionPregunta methodsFor: 'accessing' stamp: 'agustin 4/4/2020 15:59'!respuestas	^ respuestas! !!PublicacionPregunta methodsFor: 'accessing' stamp: 'agustin 4/2/2020 17:07'!descripcion	^ descripcion! !!PublicacionPregunta methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:33'!cantidadTopicosRelacionados	^ topicosRelacionados size! !!PublicacionPregunta methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:33'!cantidadRespuestas	^ respuestas size! !!PublicacionPregunta methodsFor: 'public' stamp: 'agustin 4/2/2020 15:19'!titulo: unTitulo descripcion: unaDescripcion topicosRelacionados: unaColeccionTopicosRelacionados usuarioCreador: unUsuarioCreador	super initializeConUsuarioCreador: unUsuarioCreador.	titulo := unTitulo.	descripcion := unaDescripcion.	topicosRelacionados := unaColeccionTopicosRelacionados.	respuestas := OrderedCollection new.! !!PublicacionPregunta methodsFor: 'public' stamp: 'agustin 4/30/2020 19:43'!calcularPuntajeConUsuario: unUsuario	^ self puntos + super calcularPuntajeDeterminado ! !!PublicacionPregunta methodsFor: 'public' stamp: 'agustin 4/4/2020 02:41'!agregarRespuesta: unaInstanciaPublicacionRespuesta	^ respuestas add: unaInstanciaPublicacionRespuesta! !!PublicacionPregunta methodsFor: 'public' stamp: 'agustin 4/30/2020 19:42'!obtenerRespuestasOrdenadasPorPuntaje	"Se obtienen las respuestas de la pregunta. Ordenadas por la cantidad de likes a favor"	^ respuestas		asSortedCollection:			[ :unaRespuesta :otraRespuesta | unaRespuesta calcularPuntajeDeterminado  > otraRespuesta calcularPuntajeDeterminado  ]! !!PublicacionPregunta methodsFor: 'public' stamp: 'agustin 4/5/2020 22:38'!perteneceUsuario: unUsuario	^ usuarioCreador = unUsuario! !!PublicacionPregunta methodsFor: 'public' stamp: 'agustin 5/1/2020 01:16'!borrar"Eliminar respuestas. eliminar desde respuestas. Eliminar desde topicos relacionados. Eliminar respuestas de la coleccion de usuario. eliminar pregunta desde coleccion usuario"self eliminarDesdeRespuestas.self eliminarDesdeTopicosRelacionados.self eliminarRespuestasDesdeUsuarios.self eliminarRespuestas.self eliminarDesdeUsuario.   ! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PublicacionPregunta class	instanceVariableNames: ''!!PublicacionPregunta class methodsFor: 'as yet unclassified' stamp: 'agustin 4/2/2020 14:36'!nuevoConTitulo: unTitulo descripcion: unaDescripcion topicosRelacionados: unaColeccionTopicosRelacionados usuarioCreador: unUsuarioCreador	^ self new		titulo: unTitulo		descripcion: unaDescripcion		topicosRelacionados: unaColeccionTopicosRelacionados		usuarioCreador: unUsuarioCreador! !Publicacion subclass: #PublicacionRespuesta	instanceVariableNames: 'textoRespuesta pregunta'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-Model'!!PublicacionRespuesta commentStamp: 'agustin 4/2/2020 13:21' prior: 0!Esta clase no tiene comentarios!!PublicacionRespuesta methodsFor: 'private' stamp: 'agustin 4/29/2020 17:10'!eliminarPregunta: unaPregunta	pregunta := nil! !!PublicacionRespuesta methodsFor: 'private' stamp: 'agustin 4/4/2020 17:04'!puntos	^ 50! !!PublicacionRespuesta methodsFor: 'private' stamp: 'agustin 4/30/2020 20:39'!eliminarDesdeUsuarioCreador	usuarioCreador eliminarRespuesta: self! !!PublicacionRespuesta methodsFor: 'accessing' stamp: 'agustin 4/2/2020 15:23'!pregunta	^ pregunta! !!PublicacionRespuesta methodsFor: 'accessing' stamp: 'agustin 4/2/2020 15:23'!textoRespuesta	^ textoRespuesta! !!PublicacionRespuesta methodsFor: 'public' stamp: 'agustin 5/1/2020 01:07'!perteneceUsuario: unUsuarioCreador	^ usuarioCreador = unUsuarioCreador! !!PublicacionRespuesta methodsFor: 'public' stamp: 'agustin 4/2/2020 15:14'!textoRespuesta: unTextoRespuesta pregunta: unaPregunta usuarioCreador: unUsuarioCreador	super initializeConUsuarioCreador: unUsuarioCreador.	textoRespuesta := unTextoRespuesta.	pregunta := unaPregunta! !!PublicacionRespuesta methodsFor: 'public' stamp: 'agustin 4/30/2020 19:36'!calcularPuntajeConUsuario: unUsuario	"Aca se usa unUsuario. Si el usuario contesta su pregunta, no se suma el valor, pero si las valoraciones"	(pregunta perteneceUsuario: unUsuario)		ifTrue: [ ^ super calcularPuntajeDeterminado ]		ifFalse: [ ^ self puntos + super calcularPuntajeDeterminado ]! !!PublicacionRespuesta methodsFor: 'public' stamp: 'agustin 4/5/2020 22:37'!pertenecePreguntaUsuario: unUsuario	^ pregunta perteneceUsuario: unUsuario! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!PublicacionRespuesta class	instanceVariableNames: ''!!PublicacionRespuesta class methodsFor: 'as yet unclassified' stamp: 'agustin 4/2/2020 15:11'!nuevoConTextoRespuesta: unTextoRespuesta pregunta: unaPregunta usuarioCreador: unUsuarioCreador	^ self new		textoRespuesta: unTextoRespuesta		pregunta: unaPregunta		usuarioCreador: unUsuarioCreador! !Object subclass: #Topico	instanceVariableNames: 'nombre descripcion preguntasRelacionadas'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-Model'!!Topico commentStamp: 'agustin 4/2/2020 14:45' prior: 0!Esta clase no tiene comentarios!!Topico methodsFor: 'initialization' stamp: 'agustin 4/2/2020 14:46'!initializeConNombre: unNombre descripcion: unaDescripcion	nombre := unNombre.	descripcion := unaDescripcion.	preguntasRelacionadas := OrderedCollection new! !!Topico methodsFor: 'accessing' stamp: 'agustin 4/2/2020 14:52'!preguntasRelacionadas	^ preguntasRelacionadas! !!Topico methodsFor: 'accessing' stamp: 'agustin 4/2/2020 14:52'!nombre	^ nombre! !!Topico methodsFor: 'accessing' stamp: 'agustin 4/2/2020 14:52'!descripcion	^ descripcion! !!Topico methodsFor: 'public' stamp: 'agustin 4/18/2020 10:44'!obtenerPreguntasExceptoUsuario: unUsuario	^ preguntasRelacionadas		reject: [ :unaPregunta | unaPregunta perteneceUsuario: unUsuario ]! !!Topico methodsFor: 'public' stamp: 'agustin 4/6/2020 12:11'!eliminarPregunta: unaPregunta	preguntasRelacionadas remove: unaPregunta! !!Topico methodsFor: 'public' stamp: 'agustin 4/2/2020 16:27'!obtenerPreguntas	^ preguntasRelacionadas! !!Topico methodsFor: 'public' stamp: 'agustin 4/2/2020 16:45'!agregarPreguntaRelacionada: unaInstanciaPublicacionPregunta	preguntasRelacionadas add: unaInstanciaPublicacionPregunta! !!Topico methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:34'!cantidadPreguntasRealacionadas	^ preguntasRelacionadas size! !!Topico methodsFor: 'as yet unclassified' stamp: 'agustin 5/1/2020 00:35'!tenesNombre: unNombre	^ nombre = unNombre! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Topico class	instanceVariableNames: ''!!Topico class methodsFor: 'as yet unclassified' stamp: 'agustin 4/2/2020 14:47'!nuevoConNombre: unNombre descripcion: unaDescripcion	^ self new initializeConNombre: unNombre descripcion: unaDescripcion! !Object subclass: #UsuarioCuOOra	instanceVariableNames: 'nombreUsuario contrasena fechaHoraCreacion seguidores seguidos preguntasRealizadas respuestasRealizadas topicosInteres'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-Model'!!UsuarioCuOOra commentStamp: 'agustin 4/2/2020 13:18' prior: 0!Esta clase no tiene comentarios!!UsuarioCuOOra methodsFor: 'public' stamp: 'agu 4/19/2020 18:07'!seguirUsuario: unUsuario	(seguidos includes: unUsuario) | (unUsuario = self)		ifFalse: [ seguidos add: unUsuario.			unUsuario teSigue: self ]		ifTrue: [ ^ nil ]! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/18/2020 10:42'!obtenerPreguntasRelevantes		| unSetPreguntasInteres |		unSetPreguntasInteres := Set new.		unSetPreguntasInteres addAll: (topicosInteres flatCollect: [ :unTopico | unTopico obtenerPreguntasExceptoUsuario: self  ]).		unSetPreguntasInteres addAll: self retornarPreguntasSeguidos.	^ unSetPreguntasInteres! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/3/2020 17:52'!crearPreguntaConTitulo: unTitulo descripcion: unaDescripcion topicosRelacionados: unaColeccionTopicosRelacionados		| unaInstanciaPublicacionPregunta |		unaColeccionTopicosRelacionados		ifNotEmpty: [ unaInstanciaPublicacionPregunta := PublicacionPregunta				nuevoConTitulo: unTitulo				descripcion: unaDescripcion				topicosRelacionados: unaColeccionTopicosRelacionados				usuarioCreador: self.			unaColeccionTopicosRelacionados				do:					[ :unTopico | unTopico agregarPreguntaRelacionada: unaInstanciaPublicacionPregunta ].			preguntasRealizadas add: unaInstanciaPublicacionPregunta.			^ unaInstanciaPublicacionPregunta ]! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/2/2020 16:14'!agregarTopicoInteres: unTopicoInteres	^ topicosInteres add: unTopicoInteres! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/30/2020 18:06'!calcularPuntaje	"Se calcula la cantidad de preguntas y respuestas que realizo el usuario. Al final, se realiza una suma de puntaje dado por likes y dislikes"	^ (preguntasRealizadas		sumNumbers: [ :unaPregunta | unaPregunta calcularPuntajeConUsuario: self  ])		+			(respuestasRealizadas				sumNumbers: [ :unaRespuesta | unaRespuesta calcularPuntajeConUsuario: self ])! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/5/2020 22:34'!respuestasRealizadasOtrosUsuarios	"reject retorna los false. Ya que nos interesan las respuestas tales preguntas no pertenezcan al usuario"	^ respuestasRealizadas		reject: [ :unaRespuesta | unaRespuesta pertenecePreguntaUsuario: self ]! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/4/2020 02:41'!crearRespuestaConTextoRespuesta: unTextoRespuesta pregunta: unaPregunta	| unaInstanciaPublicacionRespuesta |		unaInstanciaPublicacionRespuesta := respuestasRealizadas		add:			(PublicacionRespuesta				nuevoConTextoRespuesta: unTextoRespuesta				pregunta: unaPregunta				usuarioCreador: self).					^ unaPregunta agregarRespuesta: unaInstanciaPublicacionRespuesta! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/30/2020 20:04'!eliminarRespuesta: unaRespuesta	respuestasRealizadas remove: unaRespuesta! !!UsuarioCuOOra methodsFor: 'public' stamp: 'agustin 4/4/2020 16:28'!eliminarPregunta: unaPregunta	preguntasRealizadas remove: unaPregunta! !!UsuarioCuOOra methodsFor: 'initialization' stamp: 'agustin 4/2/2020 15:45'!initializeConNombreUsuario: unNombreUsuario contrasena: unaContrasena	nombreUsuario := unNombreUsuario.	contrasena := unaContrasena.	fechaHoraCreacion := DateAndTime new.	seguidores := OrderedCollection new.	seguidos := OrderedCollection new.	preguntasRealizadas := OrderedCollection new.	respuestasRealizadas := OrderedCollection new.	topicosInteres := OrderedCollection new.! !!UsuarioCuOOra methodsFor: 'privado' stamp: 'agustin 4/2/2020 15:41'!teSigue: unUsuario	seguidores add: unUsuario! !!UsuarioCuOOra methodsFor: 'privado' stamp: 'agustin 4/6/2020 17:56'!retornarPreguntasSeguidos	^ seguidos		flatCollect: [ :unSeguidor | unSeguidor preguntasRealizadas ]! !!UsuarioCuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 15:44'!seguidores	^ seguidores! !!UsuarioCuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 15:44'!seguidos	^ seguidos! !!UsuarioCuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 15:01'!respuestasRealizadas	^ respuestasRealizadas! !!UsuarioCuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 15:00'!preguntasRealizadas	^ preguntasRealizadas! !!UsuarioCuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 16:18'!topicosInteres	^ topicosInteres! !!UsuarioCuOOra methodsFor: 'accessing' stamp: 'agustin 4/2/2020 13:44'!contrasena	^ contrasena! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:34'!cantidadSeguidores	^ seguidores size! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/30/2020 20:08'!nombreUsuario	^ nombreUsuario! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/18/2020 11:39'!retornarNombreUsuario	^ nombreUsuario! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:35'!cantidadPreguntasRealizadas	^ preguntasRealizadas size! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:37'!cantidadTopicosInteres	^ topicosInteres size! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:36'!cantidadRespuestasRealizadas	^ respuestasRealizadas size! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/13/2020 18:35'!cantidadSeguidos	^ seguidos size! !!UsuarioCuOOra methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 11:29'!validarNombreUsuario: unNombreUsuarioIngresado contrasena: unaContrasenaIngresada	^ nombreUsuario = unNombreUsuarioIngresado		and: [ contrasena = unaContrasenaIngresada ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!UsuarioCuOOra class	instanceVariableNames: ''!!UsuarioCuOOra class methodsFor: 'as yet unclassified' stamp: 'agustin 4/2/2020 13:35'!nuevoConNombreUsuario: unNombreUsuario contrasena: unaContrasena	^ self new		initializeConNombreUsuario: unNombreUsuario		contrasena: unaContrasena! !Object subclass: #Valoracion	instanceVariableNames: 'like fechaHoraValoracion usuario publicacion'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-Model'!!Valoracion commentStamp: 'agustin 4/2/2020 13:32' prior: 0!Esta clase no tiene comentarios!!Valoracion methodsFor: 'accessing' stamp: 'agustin 4/3/2020 19:08'!usuario	^ usuario! !!Valoracion methodsFor: 'accessing' stamp: 'agustin 4/3/2020 19:09'!publicacion	^ publicacion! !!Valoracion methodsFor: 'accessing' stamp: 'agustin 4/3/2020 19:08'!like	^ like! !!Valoracion methodsFor: 'public' stamp: 'agustin 4/3/2020 18:34'!perteneceUsuario: unUsuario	^ usuario = unUsuario! !!Valoracion methodsFor: 'public' stamp: 'agustin 4/3/2020 18:45'!tenesValoracion: unLikeDislike	^ like = unLikeDislike! !!Valoracion methodsFor: 'initialization' stamp: 'agustin 4/3/2020 18:40'!initializeConLikeDislike: unLikeDislike usuario: unUsuario publicacion: unaPreguntaORespuesta	like := unLikeDislike.	usuario := unUsuario.	publicacion := unaPreguntaORespuesta.	fechaHoraValoracion := DateAndTime new! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!Valoracion class	instanceVariableNames: ''!!Valoracion class methodsFor: 'as yet unclassified' stamp: 'agustin 4/3/2020 18:38'!nuevoConLikeDisLike: unLikeDislike usuario: unUsuario publicacion: unaPreguntaORespuesta	^ self new		initializeConLikeDislike: unLikeDislike		usuario: unUsuario		publicacion: unaPreguntaORespuesta! !