WAComponent subclass: #ComponenteAccion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteAccion commentStamp: 'agustin 5/5/2020 12:55' prior: 0!Comentario: Clase para evitar duplicacion de codigo!!ComponenteAccion methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 20:41'!volverComponenteAnteriorCon: aCanvas	aCanvas anchor		callback: [ self answer  ];		with: 'Aceptar'.	aCanvas! !ComponenteAccion subclass: #ComponenteAccionIncorrecta	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteAccionIncorrecta commentStamp: 'agustin 5/5/2020 12:54' prior: 0!Comentario: Clase para informar errores o datos incorrectos!!ComponenteAccionIncorrecta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 20:41'!informarDatosIncorrectosCon: aCanvas	aCanvas		paragraph:			'Se detecto un error. Haga clic en "aceptar" para volver a intentarlo '! !!ComponenteAccionIncorrecta methodsFor: 'rendering' stamp: 'agu 4/19/2020 20:41'!renderContentOn: aCanvas	self informarDatosIncorrectosCon: aCanvas. 	super volverComponenteAnteriorCon: aCanvas.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ComponenteAccionIncorrecta class	instanceVariableNames: ''!!ComponenteAccionIncorrecta class methodsFor: 'as yet unclassified' stamp: 'agustin 4/10/2020 18:54'!informar	^ self new! !ComponenteAccion subclass: #ComponenteAccionRegistrada	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteAccionRegistrada commentStamp: 'agustin 5/5/2020 12:54' prior: 0!Comentario: Clase para informar movimientos registrados con exito!!ComponenteAccionRegistrada methodsFor: 'rendering' stamp: 'agu 4/19/2020 20:43'!renderContentOn: aCanvas	self informarAccionSatisfactoriaCon: aCanvas. 	super volverComponenteAnteriorCon: aCanvas.! !!ComponenteAccionRegistrada methodsFor: 'rendering' stamp: 'agu 4/19/2020 17:38'!informarAccionSatisfactoriaCon: aCanvasaCanvas		paragraph: 'Se registro la accion de manera correcta. Haga clic en "aceptar" para continuar '.! !WAComponent subclass: #ComponenteAplicacion	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteAplicacion commentStamp: 'agustin 5/5/2020 12:54' prior: 0!Comentario: Clase para evitar duplicacion de codigo!!ComponenteAplicacion methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 21:11'!volverAtrasCon: aCanvas	aCanvas anchor		callback: [ self answer ];		with: 'Volver atras'.	aCanvas! !!ComponenteAplicacion methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 20:13'!mostrarHomeCon: aCanvas	aCanvas anchor		callback: [ self home ];		with: 'Volver a la Home'.	aCanvas! !!ComponenteAplicacion methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 21:06'!usuario: unUsuario sigueA: otroUsuario	(unUsuario seguirUsuario: otroUsuario)		ifNil: [ self call: ComponenteAccionIncorrecta new ]		ifNotNil: [ self call: ComponenteAccionRegistrada new ]! !!ComponenteAplicacion methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 21:19'!valorarPositivamente: unaPreguntaRelevante	(unaPreguntaRelevante		registrarValoracion: true		usuario: self session user)		ifNil: [ self call: ComponenteAccionIncorrecta new ]		ifNotNil: [ self call: ComponenteAccionRegistrada new ]! !!ComponenteAplicacion methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 21:19'!valorarNegativamente: unaPreguntaRelevante	(unaPreguntaRelevante		registrarValoracion: false		usuario: self session user)		ifNil: [ self call: ComponenteAccionIncorrecta new ]		ifNotNil: [ self call: ComponenteAccionRegistrada new ]! !!ComponenteAplicacion methodsFor: 'accessing' stamp: 'agu 4/19/2020 20:13'!home	self show: ComponenteHome new! !ComponenteAplicacion subclass: #ComponenteCrearPregunta	instanceVariableNames: 'nuevoTitulo nuevaDescripcion nuevosTopicosRelacionados python java smalltalk q'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteCrearPregunta commentStamp: 'agustin 5/5/2020 12:54' prior: 0!Comentario: Se crea una pregunta!!ComponenteCrearPregunta methodsFor: 'as yet unclassified' stamp: 'agustin 4/18/2020 01:03'!agregarTopicos(java)       ifTrue: [ nuevosTopicosRelacionados  add: (Topico nuevoConNombre: 'Java'      descripcion: 'Lenguaje de programacion')  ].(python)     ifTrue: [ nuevosTopicosRelacionados  add: (Topico nuevoConNombre: 'Python'    descripcion: 'Lenguaje de programacion')  ].(smalltalk)  ifTrue: [ nuevosTopicosRelacionados  add: (Topico nuevoConNombre: 'Smalltalk' descripcion: 'Lenguaje de programacion')  ].! !!ComponenteCrearPregunta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 19:03'!ingresarDatosCon: aCanvas	aCanvas paragraph: 'Titulo: '.	aCanvas textInput on: #nuevoTitulo of: self.	aCanvas break.	aCanvas paragraph: 'Descripcion: '.	(aCanvas textArea on: #nuevaDescripcion of: self)		columns: 80;		rows: 5.	aCanvas break.	aCanvas text: 'Seleccione topicos relacionados'.	aCanvas break.	aCanvas text: 'Python'.	aCanvas checkbox on: #python of: self.	aCanvas text: 'Java'.	aCanvas checkbox on: #java of: self.	aCanvas text: 'smalltalk'.	aCanvas checkbox on: #smalltalk of: self.	aCanvas break.! !!ComponenteCrearPregunta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:11'!guardar	self agregarTopicos.		(nuevoTitulo isNotEmpty) &  (nuevaDescripcion isNotEmpty) & (nuevaDescripcion isNotEmpty) & (nuevosTopicosRelacionados size > 0)				ifTrue: [ self session user crearPreguntaConTitulo: nuevoTitulo descripcion: nuevaDescripcion topicosRelacionados: nuevosTopicosRelacionados.					 self answer ]		ifFalse: [ nuevosTopicosRelacionados removeLast .					 self call: ComponenteAccionIncorrecta new. ].! !!ComponenteCrearPregunta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 19:03'!formularioPreguntaCon: aCanvas	aCanvas		form: [ self ingresarDatosCon: aCanvas.			self botonCon: aCanvas ]! !!ComponenteCrearPregunta methodsFor: 'rendering' stamp: 'agu 4/19/2020 21:14'!renderContentOn: aCanvas	super mostrarHomeCon: aCanvas.	aCanvas break.	super volverAtrasCon: aCanvas.	self formularioPreguntaCon: aCanvas! !!ComponenteCrearPregunta methodsFor: 'rendering' stamp: 'agustin 4/16/2020 20:51'!botonCon: aCanvas	aCanvas submitButton		callback: [ self guardar ];		with: 'Guardar'! !!ComponenteCrearPregunta methodsFor: 'initialization' stamp: 'agustin 4/18/2020 01:43'!initialize	nuevosTopicosRelacionados := OrderedCollection new! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/17/2020 19:31'!java: unJava	java := unJava! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/18/2020 01:33'!python	^ python! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/16/2020 20:44'!nuevaDescripcion: unaNuevaDescripcion	nuevaDescripcion := unaNuevaDescripcion! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/16/2020 20:43'!nuevoTitulo: unNuevoTitulo	nuevoTitulo := unNuevoTitulo! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/17/2020 19:31'!smalltalk: unSmalltalk	smalltalk := unSmalltalk ! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/17/2020 18:01'!java	^ java! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/17/2020 18:01'!smalltalk	^ smalltalk! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/16/2020 20:44'!nuevoTitulo	^ nuevoTitulo! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/17/2020 19:30'!python: unPython	python := unPython! !!ComponenteCrearPregunta methodsFor: 'accessing' stamp: 'agustin 4/16/2020 20:44'!nuevaDescripcion	^ nuevaDescripcion! !ComponenteAplicacion subclass: #ComponenteCrearRespuesta	instanceVariableNames: 'pregunta nuevaRespuesta'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteCrearRespuesta commentStamp: 'agustin 5/5/2020 12:53' prior: 0!Comentario: Se crean respuestas a una pregunta !!ComponenteCrearRespuesta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 19:12'!guardar	nuevaRespuesta isNotEmpty				ifTrue: [ self session user crearRespuestaConTextoRespuesta: nuevaRespuesta pregunta: pregunta.					self answer  ]		ifFalse: [ self call: ComponenteAccionIncorrecta new ]! !!ComponenteCrearRespuesta methodsFor: 'initialization' stamp: 'agu 4/19/2020 18:58'!initializeCon: unaPregunta	pregunta := unaPregunta! !!ComponenteCrearRespuesta methodsFor: 'rendering' stamp: 'agu 4/19/2020 19:39'!responderCon: aCanvas	aCanvas paragraph: 'Pregunta que se responde: '.	aCanvas paragraph:   pregunta descripcion.	aCanvas break.	aCanvas paragraph: 'Campo de respuesta: '.	(aCanvas textArea on: #nuevaRespuesta of: self)		columns: 80;		rows: 5.	aCanvas break! !!ComponenteCrearRespuesta methodsFor: 'rendering' stamp: 'agu 4/19/2020 21:14'!renderContentOn: aCanvas	super mostrarHomeCon: aCanvas.	aCanvas break.	super volverAtrasCon: aCanvas.	self formularioRespuestaCon: aCanvas! !!ComponenteCrearRespuesta methodsFor: 'rendering' stamp: 'agu 4/19/2020 19:06'!nuevaRespuesta: unaNuevaRespuesta	nuevaRespuesta := unaNuevaRespuesta! !!ComponenteCrearRespuesta methodsFor: 'rendering' stamp: 'agu 4/19/2020 19:05'!nuevaRespuesta	^ nuevaRespuesta! !!ComponenteCrearRespuesta methodsFor: 'rendering' stamp: 'agu 4/19/2020 19:08'!botonCon: aCanvas	aCanvas submitButton		callback: [ self guardar ];		with: 'Guardar'! !!ComponenteCrearRespuesta methodsFor: 'rendering' stamp: 'agu 4/19/2020 19:03'!formularioRespuestaCon: aCanvas	aCanvas		form: [ self responderCon: aCanvas.			self botonCon: aCanvas ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ComponenteCrearRespuesta class	instanceVariableNames: ''!!ComponenteCrearRespuesta class methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 19:35'!con: unaPregunta	^ self new initializeCon: unaPregunta! !ComponenteAplicacion subclass: #ComponenteDetallePregunta	instanceVariableNames: 'pregunta'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteDetallePregunta commentStamp: 'agustin 5/5/2020 12:53' prior: 0!Comentario: Se muestan los detalles de las respuestas!!ComponenteDetallePregunta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:35'!perfilDe: unUsuario	self show: (ComponentePerfilOtroUsuario para: unUsuario)! !!ComponenteDetallePregunta methodsFor: 'as yet unclassified' stamp: 'agustin 5/5/2020 18:25'!mostrarDetallesCon: aCanvas	aCanvas paragraph: 'Realizada por: '.	aCanvas paragraph:   pregunta nombreUsuarioUsuarioCreador.	""	aCanvas anchor 		callback: [ self perfilDe: pregunta usuarioCreador  ];		with: [ aCanvas button: 'perfil usuario' ].	""	""	aCanvas anchor 		callback: [ super usuario: self session user sigueA: pregunta usuarioCreador  ];		with: [ aCanvas button: 'Seguir usuario' ].	""	aCanvas paragraph: 'Cantidad de respuestas: '.	aCanvas paragraph:   pregunta cantidadRespuestas.	aCanvas paragraph: 'Likes: '.	aCanvas paragraph:   pregunta cantidadLikes.	aCanvas paragraph: 'Dislikes: '.	aCanvas paragraph:   pregunta cantidadDislikes.	aCanvas paragraph: 'Topicos relacionados: '.	pregunta topicosRelacionados do: [ :unTopico | aCanvas listItem: unTopico nombre. ].	aCanvas paragraph: 'respuestas: '.	pregunta respuestas do: [ :unaRespuesta | aCanvas listItem: unaRespuesta textoRespuesta.		aCanvas tableData: [ aCanvas anchor callback: [ self detalleDe: unaRespuesta ]; with: '  Detalles  ' ]. 									aCanvas tableData: [ aCanvas anchor callback: [ self valorarPositivamente: unaRespuesta  ]; with: '  like  ' ]. 									aCanvas tableData: [ aCanvas anchor callback: [ self valorarNegativamente: unaRespuesta  ]; with: '  dislike  ' ]  ].		aCanvas paragraph: 'Desea responderla? Haga clic en crear respuesta '.	aCanvas anchor 		callback: [ self responderPregunta: pregunta  ];		with: [ aCanvas button: 'Responder' ].		! !!ComponenteDetallePregunta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 19:29'!responderPregunta: unaPregunta	self show: (ComponenteCrearRespuesta con: unaPregunta)! !!ComponenteDetallePregunta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 20:48'!detalleDe: unaRespuesta	self show: (ComponenteDetalleRespuesta  nuevoConRespuesta: unaRespuesta )! !!ComponenteDetallePregunta methodsFor: 'initialization' stamp: 'agustin 4/16/2020 19:37'!initializeConPregunta: unaPregunta	pregunta := unaPregunta! !!ComponenteDetallePregunta methodsFor: 'rendering' stamp: 'agu 4/19/2020 21:13'!renderContentOn: aCanvas	super mostrarHomeCon: aCanvas.	aCanvas break.	super volverAtrasCon: aCanvas.	aCanvas horizontalRule.	self mostrarDetallesCon: aCanvas! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ComponenteDetallePregunta class	instanceVariableNames: ''!!ComponenteDetallePregunta class methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 19:35'!para: unaPregunta	^ self new initializeConPregunta: unaPregunta ! !ComponenteAplicacion subclass: #ComponenteDetalleRespuesta	instanceVariableNames: 'respuesta'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteDetalleRespuesta commentStamp: 'agustin 5/5/2020 12:52' prior: 0!Comentario: Se muestan los detalles de las respuestas!!ComponenteDetalleRespuesta methodsFor: 'rendering' stamp: 'agu 4/19/2020 21:13'!renderContentOn: aCanvas	super mostrarHomeCon: aCanvas.	aCanvas break.	super volverAtrasCon: aCanvas.	aCanvas horizontalRule.	self mostrarDetallesCon: aCanvas! !!ComponenteDetalleRespuesta methodsFor: 'initialization' stamp: 'agu 4/19/2020 20:49'!initializeCon: unaRespuesta	respuesta := unaRespuesta! !!ComponenteDetalleRespuesta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 20:58'!perfilDe: unUsuario	self show: (ComponentePerfilOtroUsuario para: unUsuario)! !!ComponenteDetalleRespuesta methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 20:54'!mostrarDetallesCon: aCanvas	aCanvas paragraph: 'Realizada por: '.	aCanvas paragraph:   respuesta nombreUsuarioUsuarioCreador.	""	aCanvas anchor 		callback: [ self perfilDe: respuesta usuarioCreador  ];		with: [ aCanvas button: 'perfil usuario' ].	""	""	aCanvas anchor 		callback: [ self usuario: self session user sigueA: respuesta usuarioCreador  ];		with: [ aCanvas button: 'Seguir usuario' ].	""	aCanvas paragraph: 'Likes: '.	aCanvas paragraph:   respuesta cantidadLikes.	aCanvas paragraph: 'Dislikes: '.	aCanvas paragraph:   respuesta cantidadDislikes.! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ComponenteDetalleRespuesta class	instanceVariableNames: ''!!ComponenteDetalleRespuesta class methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 20:48'!nuevoConRespuesta: unaRespuesta	^ self new initializeCon: unaRespuesta! !ComponenteAplicacion subclass: #ComponenteHome	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteHome commentStamp: 'agustin 5/5/2020 12:49' prior: 0!Comentario: Del componente Index se pasa al componente Home. Se muestra la Home principal del usuario.!!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agustin 4/15/2020 23:52'!cerrarSesion	self session desLoguear  ! !!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 20:39'!crearPregunta	self call: ComponenteCrearPregunta new! !!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 19:11'!detalleDe: unaPregunta	self show: (ComponenteDetallePregunta para: unaPregunta)! !!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 17:45'!mostrarBienvenidaCon: aCanvas 	aCanvas heading: 'Bienvenido ' , self session usuarioLogueado.	aCanvas paragraph: 'Cantidad seguidores: '.	aCanvas paragraph:  self session user cantidadSeguidores .	aCanvas paragraph: 'Cantidad seguidos: '.	aCanvas paragraph:  self session user cantidadSeguidos .! !!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 20:35'!mostrarPreguntasCreadasCon: aCanvas	aCanvas heading		level: 3;		with: 'Mis preguntas'.			aCanvas session user preguntasRealizadas		do: [ :unaPregunta | aCanvas listItem: unaPregunta descripcion.									aCanvas tableData: [ aCanvas anchor callback: [ self detalleDe: unaPregunta   ]; with: 'Detalles' ] ].										! !!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 11:32'!cerrarSesionCon: aCanvas	aCanvas div		style: 'float:right;';		with: [ aCanvas anchor				callback: [ self cerrarSesion.								self call: ComponenteIndex new  ];				with: 'Cerrar sesion' ]. ! !!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agustin 4/16/2020 20:30'!crearPreguntaCon: aCanvas	aCanvas anchor 		callback: [ self crearPregunta ];		with: [ aCanvas button: 'crear pregunta' ]! !!ComponenteHome methodsFor: 'as yet unclassified' stamp: 'agustin 4/19/2020 22:55'!mostrarPreguntasInteresCon: aCanvas|unaColeccionPreguntasOrdenadas|	aCanvas heading		level: 3;		with: 'Preguntas de seguidores'.			unaColeccionPreguntasOrdenadas := (aCanvas session user obtenerPreguntasRelevantes asSortedCollection: [ :unaPregunta :otraPregunta | unaPregunta fechaHoraCreacion > otraPregunta fechaHoraCreacion ]) takeFirst: 5.	 	unaColeccionPreguntasOrdenadas  do: [ :unaPreguntaRelevante | aCanvas listItem: unaPreguntaRelevante  descripcion.									aCanvas tableData: [ aCanvas anchor callback: [ self detalleDe: unaPreguntaRelevante ]; with: '  Detalles  ' ]. 									aCanvas tableData: [ aCanvas anchor callback: [ self valorarPositivamente: unaPreguntaRelevante ]; with: '  like  ' ]. 									aCanvas tableData: [ aCanvas anchor callback: [ self valorarNegativamente: unaPreguntaRelevante ]; with: '  dislike  ' ]  ]! !!ComponenteHome methodsFor: 'rendering' stamp: 'agustin 4/18/2020 01:19'!renderContentOn: aCanvas	self cerrarSesionCon: aCanvas.	self mostrarBienvenidaCon: aCanvas.	 	aCanvas horizontalRule.		self mostrarPreguntasCreadasCon: aCanvas.	aCanvas break.	aCanvas break.	self crearPreguntaCon: aCanvas.		aCanvas horizontalRule.		self mostrarPreguntasInteresCon: aCanvas. ! !WAComponent subclass: #ComponenteIndex	instanceVariableNames: 'nombreUsuarioIngresado contrasenaIngresada'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponenteIndex commentStamp: 'agustin 5/5/2020 12:52' prior: 0!Comentario:Este es el componente principal(WAAdmin register: self asApplicationAt: 'CuOOra')		preferenceAt: #sessionClass		put: MySession!!ComponenteIndex methodsFor: 'accessing' stamp: 'agustin 4/11/2020 11:24'!contrasenaIngresada	^ contrasenaIngresada ! !!ComponenteIndex methodsFor: 'accessing' stamp: 'agustin 4/11/2020 11:31'!nombreUsuarioIngresado	^ nombreUsuarioIngresado! !!ComponenteIndex methodsFor: 'accessing' stamp: 'agustin 4/11/2020 11:27'!nombreUsuarioIngresado: unNombreUsuarioIngresado	nombreUsuarioIngresado  := unNombreUsuarioIngresado ! !!ComponenteIndex methodsFor: 'accessing' stamp: 'agustin 4/11/2020 11:24'!contrasenaIngresada: unaContrasenaIngresada	contrasenaIngresada := unaContrasenaIngresada! !!ComponenteIndex methodsFor: 'as yet unclassified' stamp: 'agustin 4/14/2020 19:15'!miModelo	^ CuOOra soleInstance! !!ComponenteIndex methodsFor: 'as yet unclassified' stamp: 'agustin 4/11/2020 11:29'!ingresarDatos: aCanvas	aCanvas label: 'Usuario'.	aCanvas paragraph: [ aCanvas textInput on: #nombreUsuarioIngresado of: self ].	aCanvas label: 'Contrasena'.	aCanvas paragraph: [ aCanvas textInput on: #contrasenaIngresada of: self ]! !!ComponenteIndex methodsFor: 'as yet unclassified' stamp: 'agustin 4/15/2020 20:27'!iniciarSesion: aCanvas	aCanvas		form: [ self ingresarDatos: aCanvas.			self botonCon: aCanvas ]! !!ComponenteIndex methodsFor: 'rendering' stamp: 'agustin 4/15/2020 20:59'!renderContentOn: aCanvas	self iniciarSesion: aCanvas.	aCanvas break.! !!ComponenteIndex methodsFor: 'rendering' stamp: 'agustin 4/15/2020 20:27'!botonCon: aCanvas	"Cuando se apreta el boton iniciar sesion. Resuelve callback"	aCanvas submitButton		callback: [ self login ];		with: 'Iniciar sesion'! !!ComponenteIndex methodsFor: 'rendering' stamp: 'agu 4/19/2020 18:11'!login	|unUsuarioRetornado|	unUsuarioRetornado := (self miModelo buscarUsuarioConNombreUsuario: nombreUsuarioIngresado  contrasena: contrasenaIngresada ).	 (unUsuarioRetornado)			ifNotNil: [ self session user: unUsuarioRetornado.						self call: ComponenteHome new.   ]							ifNil: 	 [ self call: ComponenteAccionIncorrecta new.						nombreUsuarioIngresado  := nil.						contrasenaIngresada  := nil ]! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ComponenteIndex class	instanceVariableNames: ''!!ComponenteIndex class methodsFor: 'class initialization' stamp: 'agustin 4/30/2020 23:58'!initialize	(WAAdmin register: self asApplicationAt: 'CuOOra')		preferenceAt: #sessionClass		put: MySession! !ComponenteAplicacion subclass: #ComponentePerfilOtroUsuario	instanceVariableNames: 'usuario'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!ComponentePerfilOtroUsuario commentStamp: 'agu 4/19/2020 18:30' prior: 0!Se muestra el perfil de otro usuario. Nuestro perfil se muestra en la Home!!ComponentePerfilOtroUsuario methodsFor: 'rendering' stamp: 'agustin 4/19/2020 22:58'!renderContentOn: aCanvas	super mostrarHomeCon: aCanvas.	aCanvas break.	super volverAtrasCon: aCanvas.	self mostrarPerfilCon: aCanvas.	self mostrarBotonSeguirCon: aCanvas.	aCanvas horizontalRule.	self mostrarPreguntasCon: aCanvas! !!ComponentePerfilOtroUsuario methodsFor: 'initialization' stamp: 'agu 4/19/2020 18:36'!initializeConUsuario: unUsuario	usuario := unUsuario! !!ComponentePerfilOtroUsuario methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:45'!detalleDe: unaPregunta	self show: (ComponenteDetallePregunta para: unaPregunta)! !!ComponentePerfilOtroUsuario methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:37'!mostrarPerfilCon: aCanvas	aCanvas heading: 'Perfil de ' , usuario nombreUsuario.	aCanvas paragraph: 'Cantidad seguidores: '.	aCanvas paragraph: usuario cantidadSeguidores.	aCanvas paragraph: 'Cantidad seguidos: '.	aCanvas paragraph: usuario cantidadSeguidos! !!ComponentePerfilOtroUsuario methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:40'!seguirUsuario	(self session user seguirUsuario: usuario)		ifNil: [ self call: ComponenteAccionIncorrecta new ]		ifNotNil: [ self call: ComponenteAccionRegistrada new ]! !!ComponentePerfilOtroUsuario methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:40'!mostrarBotonSeguirCon: aCanvas	aCanvas anchor		callback: [ self seguirUsuario ];		with: [ aCanvas button: 'Seguir usuario' ]! !!ComponentePerfilOtroUsuario methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:42'!mostrarPreguntasCon: aCanvasaCanvas heading		level: 3;		with: 'Preguntas'.			usuario preguntasRealizadas		do: [ :unaPregunta | aCanvas listItem: unaPregunta descripcion.									aCanvas tableData: [ aCanvas anchor callback: [ self detalleDe: unaPregunta   ]; with: 'Detalles' ] ].! !"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ComponentePerfilOtroUsuario class	instanceVariableNames: ''!!ComponentePerfilOtroUsuario class methodsFor: 'as yet unclassified' stamp: 'agu 4/19/2020 18:36'!para: unUsuario	^ self new initializeConUsuario: unUsuario! !WASession subclass: #MySession	instanceVariableNames: 'user'	classVariableNames: ''	poolDictionaries: ''	category: 'Obj2-TP1-ParteABC-UI'!!MySession commentStamp: 'agustin 5/5/2020 12:51' prior: 0!Comentario: Esta clase es la WASession. Cuando un usuario en particular inicia session, se maneja este mismo hasta que cierra sesion y se desloguea poniendo en nil el atributo user. !!MySession methodsFor: 'as yet unclassified' stamp: 'agustin 4/15/2020 20:34'!usuarioLogueado	^ user nombreUsuario! !!MySession methodsFor: 'as yet unclassified' stamp: 'agustin 4/15/2020 20:44'!desLoguear	user := nil! !!MySession methodsFor: 'accessing' stamp: 'agustin 4/15/2020 20:07'!user	^ user! !!MySession methodsFor: 'accessing' stamp: 'agustin 4/15/2020 20:07'!user: unUser	user := unUser! !ComponenteIndex initialize!